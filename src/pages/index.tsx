import type {ReactNode} from 'react';
import clsx from 'clsx';
import Link from '@docusaurus/Link';
import useDocusaurusContext from '@docusaurus/useDocusaurusContext';
import Layout from '@theme/Layout';
import Heading from '@theme/Heading';

import styles from './index.module.css';

function HomepageHeader() {
  const {siteConfig} = useDocusaurusContext();
  return (
    <header className={clsx('hero hero--primary', styles.heroBanner)}>
      <div className="container">
        <Heading as="h1" className="hero__title">
          {siteConfig.title}
        </Heading>
        <p className="hero__subtitle">{siteConfig.tagline}</p>
        <div className={styles.buttons}>
          <Link
            className="button button--secondary button--lg"
            to="/docs/customer/what-is-gligle">
            ü•∞ –Ø –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á
          </Link>
          <Link
            className="button button--secondary button--lg"
            to="/docs/organizer/how-to-hold-an-event">
            ü§ó –Ø –æ—Ä–≥–∞–Ω—ñ–∑–∞—Ç–æ—Ä
          </Link>
        </div>
        <Link
          className="button button--secondary button--lg"
          to="https://t.me/GligleSupport">
          üÜò –ù–∞–ø–∏—Å–∞—Ç–∏ —É –ø—ñ–¥—Ç—Ä–∏–º–∫—É (Telegram)
        </Link>
      </div>
    </header>
  );
}

export default function Home(): ReactNode {
  const {siteConfig} = useDocusaurusContext();

  const popularDocs = [
    {
      href: "/docs/customer/what-is-gligle",
      label: "–©–æ —Ç–∞–∫–µ Gligle?",
      description: "–î—ñ–∑–Ω–∞–π—Ç–µ—Å—è –±—ñ–ª—å—à–µ –ø—Ä–æ —Å–µ—Ä–≤—ñ—Å Gligle."
    },
    {
      href: "/docs/organizer/how-to-hold-an-event",
      label: "–ü–æ–≤–Ω–∞ —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—è –ø–æ –ø—Ä–æ–≤–µ–¥–µ–Ω–Ω—é –∑–∞—Ö–æ–¥—É",
      description: "–ü–æ—Å—ñ–±–Ω–∏–∫ –¥–ª—è –æ—Ä–≥–∞–Ω—ñ–∑–∞—Ç–æ—Ä—ñ–≤ –ø–æ–¥—ñ–π, —Ç–∞ —Ç–∏—Ö —Ö—Ç–æ –±–∞–∂–∞—î –ø—Ä–æ–≤–µ—Å—Ç–∏ —Å–≤—ñ–π –∑–∞—Ö—ñ–¥."
    },
    {
      href: "/docs/legal/general-rules",
      label: "–ó–∞–≥–∞–ª—å–Ω—ñ –ø—Ä–∞–≤–∏–ª–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∏ Gligle",
      description: "–ö–æ—Ä–æ—Ç–∫–∏–π –æ–≥–ª—è–¥ –ø—Ä–∞–≤–∏–ª."
    }
  ];

  const userTroubleshooting = [
    {
      href: "/docs/customer/troubleshooting#–∫–æ–¥-–∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó-–Ω–µ-–ø—Ä–∏—Ö–æ–¥–∏—Ç—å-–Ω–∞-–ø–æ—à—Ç—É",
      label: "–ö–æ–¥ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó –Ω–µ –ø—Ä–∏—Ö–æ–¥–∏—Ç—å –Ω–∞ –ø–æ—à—Ç—É?",
      description: "–®–≤–∏–¥–∫–µ –≤–∏—Ä—ñ—à–µ–Ω–Ω—è –ø—Ä–æ–±–ª–µ–º–∏ —è–∫—â–æ –Ω–µ –ø—Ä–∞—Ü—é—î –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è."
    },
    {
      href: "/docs/customer/troubleshooting#–Ω–µ-–ø—Ä–∏–π—à–æ–≤-–∫–≤–∏—Ç–æ–∫-–Ω–∞-–ø–æ—à—Ç—É—Ç–µ–ª–µ–≥—Ä–∞–º-–ø—ñ—Å–ª—è-–æ–ø–ª–∞—Ç–∏",
      label: "–ù–µ –ø—Ä–∏–π—à–æ–≤ –∫–≤–∏—Ç–æ–∫ –Ω–∞ –ø–æ—à—Ç—É/—Ç–µ–ª–µ–≥—Ä–∞–º –ø—ñ—Å–ª—è –æ–ø–ª–∞—Ç–∏?",
      description: "–©–æ —Ä–æ–±–∏—Ç–∏ —è–∫—â–æ –Ω–µ –ø—Ä–∏–π—à–æ–≤ –∫–≤–∏—Ç–æ–∫."
    },
    {
      href: "/docs/customer/troubleshooting#–Ω–µ-–ø—Ä–∞—Ü—é—î-—Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç-–æ—Ä–≥–∞–Ω—ñ–∑–∞—Ç–æ—Ä–∞",
      label: "–ù–µ –ø—Ä–∞—Ü—é—î —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç –æ—Ä–≥–∞–Ω—ñ–∑–∞—Ç–æ—Ä–∞?",
      description: "–©–æ —Ä–æ–±–∏—Ç–∏ —è–∫—â–æ –Ω–µ –ø—Ä–∞—Ü—é—î –±–æ—Ç –æ—Ä–≥–∞–Ω—ñ–∑–∞—Ç–æ—Ä–∞."
    }
  ];

  const organizerQuestions = [
    {
      href: '/docs/organizer/how-to-sell-with-telegram',
      label: '–Ø–∫ –ø—Ä–æ–¥–∞–≤–∞—Ç–∏ –∫–≤–∏—Ç–∫–∏ —á–µ—Ä–µ–∑ Telegram?',
      description: 'Telegram ‚Äì –æ–¥–∏–Ω —ñ–∑ –Ω–∞–π–ø–æ–ø—É–ª—è—Ä–Ω—ñ—à–∏—Ö –∫–∞–Ω–∞–ª—ñ–≤ –¥–ª—è –ø—Ä–æ–¥–∞–∂—É –∫–≤–∏—Ç–∫—ñ–≤...'
    },
    {
      href: '/docs/organizer/monobank-jars-faq#—è–∫-–≤–∏–≥–ª—è–¥–∞—î-–ø—Ä–æ—Ü–µ—Å-–ø–æ–∫—É–ø–∫–∏-–¥–ª—è-–∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞',
      label: '–Ø–∫ –≤–∏–≥–ª—è–¥–∞—î –ø—Ä–æ—Ü–µ—Å –ø–æ–∫—É–ø–∫–∏ –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞?',
      description: '–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –æ–±–∏—Ä–∞—î –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∫–≤–∏—Ç–∫—ñ–≤ —Ç–∞ –Ω–∞—Ç–∏—Å–∫–∞—î...'
    },
    {
      href: '/docs/organizer/monobank-jars-faq#—â–æ-–±—É–¥–µ-—è–∫—â–æ-–∫–æ—Ä–∏—Å—Ç—É–≤–∞—á-—Å–ø–ª–∞—Ç–∏—Ç—å-–º–µ–Ω—à—É-—Å—É–º—É-–Ω—ñ–∂-–≤–∫–∞–∑–∞–Ω–æ',
      label: '–©–æ –±—É–¥–µ —è–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á —Å–ø–ª–∞—Ç–∏—Ç—å –º–µ–Ω—à–µ?',
      description: '–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—É –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ —Å–ø–ª–∞—Ç–∏—Ç–∏ —Ä—ñ–≤–Ω–æ –∞–±–æ –±—ñ–ª—å—à–µ...'
    }
  ];

  return (
    <Layout
      title={`–ì–æ–ª–æ–≤–Ω–∞`}
      description={siteConfig.tagline}>
      <HomepageHeader/>
      <main>
        <div className={styles.popular}>
          <Heading as="h2">–ü–æ–ø—É–ª—è—Ä–Ω—ñ —Å—Ç–∞—Ç—Ç—ñ</Heading>
          <div className={styles.popular__list}>
            {popularDocs.map((doc) => (
              <Link key={doc.href} className={styles.popular__item} to={doc.href}>
                <p>{doc.label}</p>
                <span>{doc.description}</span>
              </Link>
            ))}</div>
        </div>

        <div className={styles.popular}>
          <Heading as="h2">–©–æ—Å—å –ø—ñ—à–ª–æ –Ω–µ —Ç–∞–∫?</Heading>
          <div className={styles.popular__list}>
            {userTroubleshooting.map((doc) => (
              <Link key={doc.href} className={styles.popular__item} to={doc.href}>
                <p>{doc.label}</p>
                <span>{doc.description}</span>
              </Link>
            ))}</div>
        </div>

        <div className={styles.popular}>
          <Heading as="h2">–ß–∞—Å—Ç—ñ –ø–∏—Ç–∞–Ω–Ω—è –≤—ñ–¥ –æ—Ä–≥–∞–Ω—ñ–∑–∞—Ç–æ—Ä—ñ–≤</Heading>
          <div className={styles.popular__list}>
            {organizerQuestions.map((doc) => (
              <Link key={doc.href} className={styles.popular__item} to={doc.href}>
                <p>{doc.label}</p>
                <span>{doc.description}</span>
              </Link>
            ))}</div>
        </div>
      </main>
    </Layout>
  );
}
